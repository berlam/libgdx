/*******************************************************************************
 * Copyright 2011 See AUTHORS file.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/

buildscript {
    dependencies {
        classpath "org.akhikhl.gretty:gretty:2.0.0"
    }
}
apply plugin: "war"
apply plugin: 'org.akhikhl.gretty'

dependencies {
    compile project(":tests:gdx-tests")
    compile project(":backends:gdx-backend-teavm")
    compile project(":extensions:gdx-controllers:gdx-controllers-teavm")
}

gretty {
    webAppDirName = "war"
    inplaceMode = "hard"
}

import org.akhikhl.gretty.AppAfterIntegrationTestTask
import org.akhikhl.gretty.AppBeforeIntegrationTestTask

draftWar {
    from "war"
}

task myBeforeIntegration(type: AppBeforeIntegrationTestTask) {
    dependsOn draftWar
    resourceBase = draftWar.archivePath.toString()
    integrationTestTask 'superDev'
}

task myAfterIntegration(type: AppAfterIntegrationTestTask) {
    integrationTestTask 'superDev'
}

task dist(dependsOn: [clean, compileGwt]) {
    doLast {
        file("build/dist").mkdirs()
        copy {
            from "build/gwt/out"
            into "build/dist"
        }
        copy {
            from "webapp"
            into "build/dist"
        }
        copy {
            from "war"
            into "build/dist"
        }
    }
}


task addSource {
    doLast {
        sourceSets.main.compileClasspath += files(project(':tests:gdx-tests').sourceSets.main.allJava.srcDirs)
        sourceSets.main.compileClasspath += files(project(':backends:gdx-backends-teavm').sourceSets.main.allJava.srcDirs)
        sourceSets.main.compileClasspath += files(project(':extensions:gdx-controllers:gdx-controllers').sourceSets.main.allJava.srcDirs)
        sourceSets.main.compileClasspath += files(project(':extensions:gdx-controllers:gdx-controllers-teavm').sourceSets.main.allJava.srcDirs)
        sourceSets.main.compileClasspath += files(project(':gdx').sourceSets.main.allJava.srcDirs)
    }
}

tasks.compileGwt.dependsOn(addSource)
tasks.draftCompileGwt.dependsOn(addSource)
